pipeline {
    agent any

        environment {
		DOCKERHUB_CREDENTIALS=credentials('dockerhub')
        PROJECT_ID = "x-plateau-436009-s9"

			
	}
    stages {
    
        stage('Build & push Dockerfile') {
            steps {
                sh """
                echo $DOCKERHUB_CREDENTIALS_PSW | docker login -u $DOCKERHUB_CREDENTIALS_USR --password-stdin'
                // ansible-playbook ansible-playbook.yml
                docker build -t $DOCKERHUB_CREDENTIALS_USR/comingsoon-page:${BUILD_NUMBER} .
                docker push $DOCKERHUB_CREDENTIALS_USR/comingsoon-page:${BUILD_NUMBER}
                """
            }
        }
    stage('Deploy to Google cloud ') {
            steps {
                    echo 'Deploying to Google Kubernetes Engine'
                    script {
                        withCredentials([file(credentialsId: 'GCP', variable: 'GCP')]) {
                            sh """
                            
                            gcloud auth activate-service-account --key-file=${GCP}
                            gcloud config set project ${PROJECT_ID}
                            export USE_GKE_GCLOUD_AUTH_PLUGIN=True
                            gcloud container clusters get-credentials gke-depi --zone us-central1-c
                            kubectl cluster-info
                            kubectl set image deployment/app-deployment my-app-container="themasterahmedemadnour/comingsoon-page"
                            kubectl rollout status deployment/app-deployment
                            """
                        }
                    }
                    
                }
            }
    }
    post {
        always {
            cleanWs()
        }
        success {
            echo 'Pipeline succeeded!'
            slackSend(channel: '#depidevopsproject', color: 'good', message: "Build SUCCESSFUL: ${env.JOB_NAME} #${env.BUILD_NUMBER} (<${env.BUILD_URL}|Open>)")
        }
        failure {
            echo 'Pipeline failed!'
             slackSend(channel: '#depidevopsproject', color: 'danger', message: "Build FAILED: ${env.JOB_NAME} #${env.BUILD_NUMBER} (<${env.BUILD_URL}|Open>)")
        }
    }
}        
